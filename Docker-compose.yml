version: "3"

services:
  db:
    image: postgres:14-alpine
    container_name: gaming_db
    restart: always
    build:
      context: ./db_data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    volumes:
      - ./db_data/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db_data/csv/hltb_scrap.csv:/docker-entrypoint-initdb.d/csv_file/hltb_scrap.csv
      - ./db_data/csv/metacritic_clean.csv:/docker-entrypoint-initdb.d/csv_file/metacritic_clean.csv
      - ./db_data/csv/metacritic_merged_local.csv:/docker-entrypoint-initdb.d/csv_file/metacritic_merged_local.csv
      - ${MOUNT_PATH}/db_data/backup/postgresql_data_vol:/db_data/db
    ports:
      - "${POSTGRES_PORT}:5432"

  app:
    depends_on:
      - db
    env_file: .env
    container_name: py_gaming_app
    build:
      context : ./app
      dockerfile: Dockerfile
    #image: binardino/gaming_of_a_lifetime:latest
    restart: always
    ports:
      - "${STAPP_PORT}:${STAPP_PORT}"

volumes:
  db:
    driver : local
